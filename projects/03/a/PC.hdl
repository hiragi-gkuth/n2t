// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Add16(a=fb, b[0]=true, b[1..15]=false, out=Incfb);
    And16(a=fb, b[0..15]=false, out=zr);

    // flags
    Not(in=reset, out=Notreset);
    Or(a=inc, b=load, out=incOrload);
    Not(in=incOrload, out=incNorload);
    Or(a=load, b=incNorload, out=loadOrincNorload);
    And(a=Notreset, b=loadOrincNorload, out=sel00);

    Or(a=load, b=reset, out=loadOrreset);
    Not(in=loadOrreset, out=sel01);

    // select
    Mux4Way16(a=zr, b=in, c=Incfb, d=fb, sel[1]=sel01, sel[0]=sel00, out=w1);
    Register(in=w1, load=true, out=out, out=fb);
}
